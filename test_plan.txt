ЭТАПЫ
1.	Подготовительный этап
1.1.	Определение требований и критериев успешности тестирования
1.2.	Создание тест-кейсов
2.	Функциональное тестирование
2.1.	 Ручное тестирование всех функций сервиса:
2.1.1.	Поиск продуктов с отображением их КБЖУ и микронутриентов;
2.1.2.	Журнал питания, в котором пользователь фиксирует и отслеживает съеденные продукты и КБЖУ;
2.1.3.	Трекер воды для учета выпитой жидкости;
2.1.4.	Возможность добавления новых продуктов пользователем;
2.1.5.	Калькулятор КБЖУ для расчета суточной нормы питания с учетом индивидуальных параметров;
2.1.6.	Рекомендации по КБЖУ, анализирующие рацион пользователя и предлагающие способы его улучшения;
2.1.7.	Создание и управление рецептами с автоматическим расчетом КБЖУ;
2.2.	Анализ обратной связи пользователей
3.	Нефункциональное тестирование
3.1.	Тестирование производительности
3.1.1.	Оценка скорости загрузки веб-страниц
3.1.2.	Stress-тестирование 
3.1.3.	Отзывы целевой аудитории
3.2.	Тестирование безопасности
3.2.1.	Ручное тестирование на уязвимости
3.3.	Тестирование юзабельности
3.3.1.	Интервьюирование целевой аудитории
3.4.	Тестирование надежности
4.	Regression-тесты
5.	Compatibility-тесты


 
ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
●	100% покрытие тест-кейсов, 0 критических багов
●	Работа всех функций
●	Производительность: время отклика сервера не более 3 секунд, при возможности работы с 1000+ пользователей одновременно.
●	Безопасность: отсутствие критических уязвимостей
●	Юзабельность: удовлетворенность пользователей не менее 85% (по результатам опросов).
●	Корректная работа в популярных браузерах (Chrome, Firefox, Safari).

ПЛАН ДЕЙСТВИЙ ПОСЛЕ ТЕСТИРОВАНИЯ
1.	Исправление выявленных багов и уязвимостей.
2.	Оптимизация рекомендательных алгоритмов на основе результатов тестов.
3.	Доработка интерфейса по результатам юзабилити-тестирования.
4.	Подготовка отчета о тестировании для заинтересованных сторон.

ИНСТРУМЕНТЫ
1.	Создание тест кейсов
Критерий	TestRail	Zephyr	Google Sheets
Бюджет	Платный	Платный 	Бесплатно
Обучение	Требуется время	Требуется время	Минимальное 
Интерфейс 	Интуитивный 	Зависит от Jira	Простой 
Управление тест-кейсами	Удобное	Удобное 	Удобное, но требует ручного управления
Отслеживание прогресса	Да	Да	Нет 
Совместная работа	Да 	Да 	Да
Автоматизация 	Через интеграцию	Через интеграцию	Нет 

Мы выбираем Google Sheets, так как он бесплатный, нам не нужно тратить много времени на обучение и нам не требуется профессиональное управление тестированием

2.	Функциональное тестирование
Критерий	Selenium	Cypress	TestComplete
Бюджет 	Бесплатно 	Бесплатно	Платно
Поддержка языков	Java, Python, C#, JavaScript и др.	JavaScript	JavaScript, Python и др.
Поддержка браузеров	Все популярные	Chrome	Все популярные
Обучение 	Требуется время	Минимальное 	Требуется время
Простота настройки	Сложная 	Простая 	Простая 
Десктопное тестирование	Через сторонние инструменты	Нет 	Да 

Мы выбираем Cypress потому что он бесплатный, прост в настройке, отлично интегрируется с Vue.js и нам потребуется минимальное время на обучение

3.	Нефункциональное тестирование 
Критерий	JMeter	Gatling	OWASP ZAP	LoadRunner	Lighthouse
Тип тестирования	Нагрузочное, производительностное	Нагрузочное, производительностное	Безопасностное	Нагрузочное, стрессовое	Производительность, доступность, SEO
Стоимость	Бесплатно	Бесплатно (с некоторыми платными функциями)	Бесплатно	Платный	Бесплатно
Поддержка языков	Java, Groovy	Scala	Нет (GUI и скрипты)	C#, Java, VBScript	JavaScript
Простота настройки	Средняя	Простая	Простая	Сложная	Простая
Обучение	Требуется время	Минимальное	Требуется время	Требуется время	Минимальное

Мы выбираем для нагрузочного тестирования JMeter, потому что он бесплатен и поддерживает язык Java, не сложная настройка.
Мы выбираем для тестирования безопасности OWASP ZAP, потому что он бесплатен и у него простая настройка.
Мы выбираем для тестирования юзабельности Lighthouse, потому что он бесплатен и на обучение тратится минимальное время, простая настройка.
4.	Тестирование API
Критерий	Postman	Insomnia	Paw
Стоимость	Бесплатно	Бесплатно	Платно
Автоматизация тестов	Да 	Да 	Нет 
Простота использования	Высокая	Высокая	
Поддержка платформ	Windows, macOS, Linux, веб-версия	Windows, macOS, Linux	macOS

Мы выбираем Postman потому что он бесплатен, у него есть автоматизация тестов, он прост в использовании и поддерживает большинство платформ




