{"ast":null,"code":"import _regeneratorRuntime from \"D:/TRPO/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/TRPO/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport axios from 'axios';\nexport default {\n  name: 'CalculatorPage',\n  data: function data() {\n    return {\n      form: {\n        gender: 'male',\n        age: 30,\n        weight: 70,\n        height: 175,\n        activity: '1.55',\n        goal: 'maintain'\n      },\n      results: {\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0\n      },\n      loading: false,\n      error: ''\n    };\n  },\n  mounted: function mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData: function loadUserData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response, user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.get('http://localhost:3000/api/users/profile', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 6:\n              response = _context.sent;\n              user = response.data;\n              if (user) {\n                // Заполнить форму данными пользователя, если они доступны\n                if (user.gender) _this.form.gender = user.gender;\n                if (user.age) _this.form.age = user.age;\n                if (user.weight) _this.form.weight = user.weight;\n                if (user.height) _this.form.height = user.height;\n              }\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Ошибка при загрузке данных пользователя:', _context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 11]]);\n      }))();\n    },\n    calculateNutrition: function calculateNutrition() {\n      // Проверка данных формы\n      if (!this.validateForm()) {\n        return;\n      }\n      this.loading = true;\n      this.error = '';\n      try {\n        // Расчет базового метаболизма (BMR) по формуле Миффлина-Сан Жеора\n        var bmr = 0;\n        if (this.form.gender === 'male') {\n          bmr = 10 * this.form.weight + 6.25 * this.form.height - 5 * this.form.age + 5;\n        } else {\n          bmr = 10 * this.form.weight + 6.25 * this.form.height - 5 * this.form.age - 161;\n        }\n\n        // Умножаем на коэффициент активности\n        var dailyCalories = bmr * parseFloat(this.form.activity);\n\n        // Корректируем в зависимости от цели\n        switch (this.form.goal) {\n          case 'lose':\n            // Дефицит 20% для похудения\n            dailyCalories *= 0.8;\n            break;\n          case 'gain':\n            // Профицит 15% для набора массы\n            dailyCalories *= 1.15;\n            break;\n          // Для поддержания ничего не меняем\n        }\n\n        // Расчет БЖУ\n        // Для похудения: 35% белков, 20% жиров, 45% углеводов\n        // Для поддержания: 30% белков, 30% жиров, 40% углеводов\n        // Для набора массы: 25% белков, 25% жиров, 50% углеводов\n        var proteinPercentage, fatPercentage, carbPercentage;\n        switch (this.form.goal) {\n          case 'lose':\n            proteinPercentage = 0.35;\n            fatPercentage = 0.20;\n            carbPercentage = 0.45;\n            break;\n          case 'maintain':\n            proteinPercentage = 0.30;\n            fatPercentage = 0.30;\n            carbPercentage = 0.40;\n            break;\n          case 'gain':\n            proteinPercentage = 0.25;\n            fatPercentage = 0.25;\n            carbPercentage = 0.50;\n            break;\n        }\n\n        // Расчет граммов БЖУ\n        var proteins = dailyCalories * proteinPercentage / 4; // 4 калории в 1 г белка\n        var fats = dailyCalories * fatPercentage / 9; // 9 калорий в 1 г жира\n        var carbs = dailyCalories * carbPercentage / 4; // 4 калории в 1 г углеводов\n\n        this.results = {\n          calories: dailyCalories,\n          proteins: proteins,\n          fats: fats,\n          carbs: carbs\n        };\n      } catch (error) {\n        this.error = 'Ошибка при расчете. Проверьте введенные данные.';\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    saveResults: function saveResults() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('token');\n              if (token) {\n                _context2.next = 4;\n                break;\n              }\n              alert('Необходимо войти в систему, чтобы сохранить результаты');\n              return _context2.abrupt(\"return\");\n            case 4:\n              _context2.prev = 4;\n              _context2.next = 7;\n              return axios.post('http://localhost:3000/api/calories/save', {\n                dailyCalories: Math.round(_this2.results.calories),\n                proteins: Math.round(_this2.results.proteins),\n                fats: Math.round(_this2.results.fats),\n                carbs: Math.round(_this2.results.carbs),\n                goal: _this2.form.goal\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 7:\n              response = _context2.sent;\n              if (response.status === 201) {\n                alert('Результаты успешно сохранены');\n              }\n              _context2.next = 15;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.error('Ошибка при сохранении результатов:', _context2.t0);\n              alert('Не удалось сохранить результаты. Попробуйте позже.');\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 11]]);\n      }))();\n    },\n    validateForm: function validateForm() {\n      if (!this.form.age || !this.form.weight || !this.form.height) {\n        this.error = 'Пожалуйста, заполните все поля';\n        return false;\n      }\n      if (this.form.age < 12 || this.form.age > 100) {\n        this.error = 'Возраст должен быть от 12 до 100 лет';\n        return false;\n      }\n      if (this.form.weight < 30 || this.form.weight > 300) {\n        this.error = 'Вес должен быть от 30 до 300 кг';\n        return false;\n      }\n      if (this.form.height < 100 || this.form.height > 250) {\n        this.error = 'Рост должен быть от 100 до 250 см';\n        return false;\n      }\n      return true;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","gender","age","weight","height","activity","goal","results","calories","proteins","fats","carbs","loading","error","mounted","loadUserData","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","user","wrap","_callee$","_context","prev","next","localStorage","getItem","abrupt","get","headers","Authorization","concat","sent","t0","console","stop","calculateNutrition","validateForm","bmr","dailyCalories","parseFloat","proteinPercentage","fatPercentage","carbPercentage","saveResults","_this2","_callee2","_callee2$","_context2","alert","post","Math","round","status"],"sources":["D:\\TRPO\\client\\src\\views\\Calculator.vue"],"sourcesContent":["<template>\r\n  <div class=\"calculator-page\">\r\n    <h1>Калькулятор КБЖУ</h1>\r\n    <div class=\"calculator-container\">\r\n      <div class=\"calculator-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Пол:</label>\r\n          <div class=\"radio-group\">\r\n            <label class=\"radio-label\">\r\n              <input type=\"radio\" id=\"gender-male\" name=\"gender\" value=\"male\" v-model=\"form.gender\">\r\n              Мужской\r\n            </label>\r\n            <label class=\"radio-label\">\r\n              <input type=\"radio\" id=\"gender-female\" name=\"gender\" value=\"female\" v-model=\"form.gender\">\r\n              Женский\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"age\">Возраст (лет):</label>\r\n          <input type=\"number\" id=\"age\" v-model.number=\"form.age\" min=\"12\" max=\"100\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"weight\">Вес (кг):</label>\r\n          <input type=\"number\" id=\"weight\" v-model.number=\"form.weight\" min=\"30\" max=\"300\" step=\"0.1\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"height\">Рост (см):</label>\r\n          <input type=\"number\" id=\"height\" v-model.number=\"form.height\" min=\"100\" max=\"250\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"activity\">Уровень активности:</label>\r\n          <select id=\"activity\" v-model=\"form.activity\" required>\r\n            <option value=\"1.2\">Минимальная активность (сидячая работа)</option>\r\n            <option value=\"1.375\">Легкие тренировки (1-3 раза в неделю)</option>\r\n            <option value=\"1.55\">Средняя активность (3-5 раз в неделю)</option>\r\n            <option value=\"1.725\">Высокая активность (6-7 раз в неделю)</option>\r\n            <option value=\"1.9\">Очень высокая активность (физическая работа)</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Цель:</label>\r\n          <div class=\"goal-tabs\">\r\n            <button \r\n              type=\"button\" \r\n              class=\"goal-tab\" \r\n              :class=\"{ 'active': form.goal === 'lose' }\"\r\n              @click=\"form.goal = 'lose'\"\r\n            >\r\n              Похудение\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"goal-tab\" \r\n              :class=\"{ 'active': form.goal === 'maintain' }\"\r\n              @click=\"form.goal = 'maintain'\"\r\n            >\r\n              Поддержание\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"goal-tab\" \r\n              :class=\"{ 'active': form.goal === 'gain' }\"\r\n              @click=\"form.goal = 'gain'\"\r\n            >\r\n              Набор массы\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" class=\"calculate-btn\" @click=\"calculateNutrition\">Рассчитать</button>\r\n        <button type=\"button\" class=\"save-btn\" @click=\"saveResults\" v-if=\"results.calories\">Сохранить результаты</button>\r\n      </div>\r\n\r\n      <div class=\"calculator-results\" v-if=\"results.calories\">\r\n        <h2>Ваши результаты:</h2>\r\n        <div class=\"results-container\">\r\n          <div class=\"result-card\">\r\n            <div class=\"result-icon\">🔥</div>\r\n            <div class=\"result-value\">{{ Math.round(results.calories) }}</div>\r\n            <div class=\"result-label\">Калории (ккал)</div>\r\n          </div>\r\n          <div class=\"result-card\">\r\n            <div class=\"result-icon\">🥩</div>\r\n            <div class=\"result-value\">{{ Math.round(results.proteins) }}</div>\r\n            <div class=\"result-label\">Белки (г)</div>\r\n          </div>\r\n          <div class=\"result-card\">\r\n            <div class=\"result-icon\">🥑</div>\r\n            <div class=\"result-value\">{{ Math.round(results.fats) }}</div>\r\n            <div class=\"result-label\">Жиры (г)</div>\r\n          </div>\r\n          <div class=\"result-card\">\r\n            <div class=\"result-icon\">🍞</div>\r\n            <div class=\"result-value\">{{ Math.round(results.carbs) }}</div>\r\n            <div class=\"result-label\">Углеводы (г)</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CalculatorPage',\r\n  data() {\r\n    return {\r\n      form: {\r\n        gender: 'male',\r\n        age: 30,\r\n        weight: 70,\r\n        height: 175,\r\n        activity: '1.55',\r\n        goal: 'maintain'\r\n      },\r\n      results: {\r\n        calories: 0,\r\n        proteins: 0,\r\n        fats: 0,\r\n        carbs: 0\r\n      },\r\n      loading: false,\r\n      error: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadUserData();\r\n  },\r\n  methods: {\r\n    async loadUserData() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/users/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        const user = response.data;\r\n        \r\n        if (user) {\r\n          // Заполнить форму данными пользователя, если они доступны\r\n          if (user.gender) this.form.gender = user.gender;\r\n          if (user.age) this.form.age = user.age;\r\n          if (user.weight) this.form.weight = user.weight;\r\n          if (user.height) this.form.height = user.height;\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке данных пользователя:', error);\r\n      }\r\n    },\r\n    calculateNutrition() {\r\n      // Проверка данных формы\r\n      if (!this.validateForm()) {\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = '';\r\n      \r\n      try {\r\n        // Расчет базового метаболизма (BMR) по формуле Миффлина-Сан Жеора\r\n        let bmr = 0;\r\n        if (this.form.gender === 'male') {\r\n          bmr = 10 * this.form.weight + 6.25 * this.form.height - 5 * this.form.age + 5;\r\n        } else {\r\n          bmr = 10 * this.form.weight + 6.25 * this.form.height - 5 * this.form.age - 161;\r\n        }\r\n        \r\n        // Умножаем на коэффициент активности\r\n        let dailyCalories = bmr * parseFloat(this.form.activity);\r\n        \r\n        // Корректируем в зависимости от цели\r\n        switch (this.form.goal) {\r\n          case 'lose':\r\n            // Дефицит 20% для похудения\r\n            dailyCalories *= 0.8;\r\n            break;\r\n          case 'gain':\r\n            // Профицит 15% для набора массы\r\n            dailyCalories *= 1.15;\r\n            break;\r\n          // Для поддержания ничего не меняем\r\n        }\r\n        \r\n        // Расчет БЖУ\r\n        // Для похудения: 35% белков, 20% жиров, 45% углеводов\r\n        // Для поддержания: 30% белков, 30% жиров, 40% углеводов\r\n        // Для набора массы: 25% белков, 25% жиров, 50% углеводов\r\n        let proteinPercentage, fatPercentage, carbPercentage;\r\n        \r\n        switch (this.form.goal) {\r\n          case 'lose':\r\n            proteinPercentage = 0.35;\r\n            fatPercentage = 0.20;\r\n            carbPercentage = 0.45;\r\n            break;\r\n          case 'maintain':\r\n            proteinPercentage = 0.30;\r\n            fatPercentage = 0.30;\r\n            carbPercentage = 0.40;\r\n            break;\r\n          case 'gain':\r\n            proteinPercentage = 0.25;\r\n            fatPercentage = 0.25;\r\n            carbPercentage = 0.50;\r\n            break;\r\n        }\r\n        \r\n        // Расчет граммов БЖУ\r\n        const proteins = (dailyCalories * proteinPercentage) / 4; // 4 калории в 1 г белка\r\n        const fats = (dailyCalories * fatPercentage) / 9; // 9 калорий в 1 г жира\r\n        const carbs = (dailyCalories * carbPercentage) / 4; // 4 калории в 1 г углеводов\r\n        \r\n        this.results = {\r\n          calories: dailyCalories,\r\n          proteins,\r\n          fats,\r\n          carbs\r\n        };\r\n        \r\n      } catch (error) {\r\n        this.error = 'Ошибка при расчете. Проверьте введенные данные.';\r\n        console.error(error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async saveResults() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('Необходимо войти в систему, чтобы сохранить результаты');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/calories/save', {\r\n          dailyCalories: Math.round(this.results.calories),\r\n          proteins: Math.round(this.results.proteins),\r\n          fats: Math.round(this.results.fats),\r\n          carbs: Math.round(this.results.carbs),\r\n          goal: this.form.goal\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        if (response.status === 201) {\r\n          alert('Результаты успешно сохранены');\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении результатов:', error);\r\n        alert('Не удалось сохранить результаты. Попробуйте позже.');\r\n      }\r\n    },\r\n    validateForm() {\r\n      if (!this.form.age || !this.form.weight || !this.form.height) {\r\n        this.error = 'Пожалуйста, заполните все поля';\r\n        return false;\r\n      }\r\n      \r\n      if (this.form.age < 12 || this.form.age > 100) {\r\n        this.error = 'Возраст должен быть от 12 до 100 лет';\r\n        return false;\r\n      }\r\n      \r\n      if (this.form.weight < 30 || this.form.weight > 300) {\r\n        this.error = 'Вес должен быть от 30 до 300 кг';\r\n        return false;\r\n      }\r\n      \r\n      if (this.form.height < 100 || this.form.height > 250) {\r\n        this.error = 'Рост должен быть от 100 до 250 см';\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calculator-page {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.calculator-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n}\r\n\r\n.calculator-form {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  background-color: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #444;\r\n}\r\n\r\ninput[type=\"number\"],\r\nselect {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.radio-group {\r\n  display: flex;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.radio-label {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.radio-label input {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.goal-tabs {\r\n  display: flex;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.goal-tab {\r\n  flex: 1;\r\n  padding: 0.75rem;\r\n  text-align: center;\r\n  background-color: #f5f5f5;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.goal-tab.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.calculate-btn,\r\n.save-btn {\r\n  width: 100%;\r\n  padding: 0.9rem;\r\n  margin-top: 1rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.calculate-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.calculate-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.calculator-results {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  background-color: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.calculator-results h2 {\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n  color: #333;\r\n}\r\n\r\n.results-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1.5rem;\r\n}\r\n\r\n.result-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.result-icon {\r\n  font-size: 2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.result-value {\r\n  font-size: 1.75rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.result-label {\r\n  margin-top: 0.5rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .calculator-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .calculator-form,\r\n  .calculator-results {\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .results-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}