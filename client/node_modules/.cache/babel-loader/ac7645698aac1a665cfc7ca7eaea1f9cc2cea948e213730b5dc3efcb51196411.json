{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"water-tracker\"\n};\nvar _hoisted_2 = {\n  \"class\": \"water-card\"\n};\nvar _hoisted_3 = {\n  \"class\": \"info-section\"\n};\nvar _hoisted_4 = {\n  \"class\": \"date-control\"\n};\nvar _hoisted_5 = {\n  \"class\": \"water-info\"\n};\nvar _hoisted_6 = {\n  \"class\": \"water-stats\"\n};\nvar _hoisted_7 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_8 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_9 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_10 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_11 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_13 = {\n  \"class\": \"water-progress-container\"\n};\nvar _hoisted_14 = {\n  \"class\": \"water-graphic\"\n};\nvar _hoisted_15 = {\n  \"class\": \"progress-text\"\n};\nvar _hoisted_16 = {\n  \"class\": \"add-water-section\"\n};\nvar _hoisted_17 = {\n  \"class\": \"quick-add-buttons\"\n};\nvar _hoisted_18 = {\n  \"class\": \"custom-amount\"\n};\nvar _hoisted_19 = {\n  key: 0,\n  \"class\": \"water-history-section\"\n};\nvar _hoisted_20 = {\n  \"class\": \"history-chart\"\n};\nvar _hoisted_21 = {\n  \"class\": \"history-day\"\n};\nvar _hoisted_22 = {\n  \"class\": \"history-bar-container\"\n};\nvar _hoisted_23 = {\n  \"class\": \"history-amount\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[14] || (_cache[14] = _createElementVNode(\"h1\", {\n    \"class\": \"text-2xl font-bold mb-6 text-white\"\n  }, \"Трекер воды\", -1 /* HOISTED */)), _createCommentVNode(\" Карточка с отслеживанием воды \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.changeDate(-1);\n    }),\n    icon: \"el-icon-arrow-left\",\n    circle: \"\"\n  }), _createVNode(_component_el_date_picker, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.selectedDate = $event;\n    }),\n    type: \"date\",\n    format: \"YYYY-MM-DD\",\n    \"value-format\": \"YYYY-MM-DD\",\n    placeholder: \"Выберите дату\",\n    onChange: $options.loadWaterStatus\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_button, {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.changeDate(1);\n    }),\n    icon: \"el-icon-arrow-right\",\n    circle: \"\"\n  })]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Выпито\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($data.waterAmount) + \" мл\", 1 /* TEXT */)]), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"stat-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Норма\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.waterNorm) + \" мл\", 1 /* TEXT */)]), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"stat-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Осталось\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, _toDisplayString($options.remainingAmount) + \" мл\", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", {\n    \"class\": \"water-level\",\n    style: _normalizeStyle({\n      height: \"\".concat($data.percentCompleted, \"%\")\n    })\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"div\", {\n    \"class\": \"water-waves\"\n  }, null, -1 /* HOISTED */)]), 4 /* STYLE */)]), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($data.percentCompleted) + \"%\", 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_16, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", {\n    \"class\": \"section-title\"\n  }, \"Добавить воду\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList([100, 200, 300, 500], function (amount) {\n    return _createVNode(_component_el_button, {\n      key: amount,\n      \"class\": \"quick-add-button\",\n      onClick: function onClick($event) {\n        return $options.addWater(amount);\n      }\n    }, {\n      \"default\": _withCtx(function () {\n        return [_createTextVNode(\" +\" + _toDisplayString(amount) + \" мл \", 1 /* TEXT */)];\n      }),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_el_input_number, {\n    modelValue: $data.customAmount,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.customAmount = $event;\n    }),\n    min: 1,\n    max: 5000,\n    step: 50,\n    placeholder: \"Введите объем\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.addWater($data.customAmount);\n    })\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[11] || (_cache[11] = [_createTextVNode(\" Добавить воду \")]);\n    }),\n    _: 1 /* STABLE */\n  })])]), $data.waterHistory.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", {\n    \"class\": \"section-title\"\n  }, \"История потребления воды\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.waterHistory, function (entry, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"history-bar\"\n    }, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString($options.formatDay(entry.date)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"history-bar-fill\", {\n        'current': entry.date === $data.selectedDate\n      }]),\n      style: _normalizeStyle({\n        height: \"\".concat(entry.percentCompleted, \"%\")\n      })\n    }, null, 6 /* CLASS, STYLE */)]), _createElementVNode(\"div\", _hoisted_23, _toDisplayString(Math.round(entry.amount / 100) / 10) + \"л\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n    \"class\": \"water-tips\"\n  }, [_createElementVNode(\"h3\", {\n    \"class\": \"tips-title\"\n  }, \"Советы для достаточного потребления воды:\"), _createElementVNode(\"ul\", {\n    \"class\": \"tips-list\"\n  }, [_createElementVNode(\"li\", null, \"Начинайте день со стакана воды\"), _createElementVNode(\"li\", null, \"Установите регулярные напоминания\"), _createElementVNode(\"li\", null, \"Носите с собой многоразовую бутылку\"), _createElementVNode(\"li\", null, \"Пейте стакан воды за 30 минут до еды\"), _createElementVNode(\"li\", null, \"Добавляйте в воду ломтики фруктов для вкуса\")])], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_button","onClick","_cache","$event","$options","changeDate","icon","circle","_component_el_date_picker","modelValue","$data","selectedDate","type","format","placeholder","onChange","loadWaterStatus","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","waterAmount","_hoisted_9","_hoisted_10","waterNorm","_hoisted_11","_hoisted_12","remainingAmount","_hoisted_13","_hoisted_14","style","_normalizeStyle","height","concat","percentCompleted","_hoisted_15","_hoisted_16","_hoisted_17","_Fragment","_renderList","amount","addWater","_withCtx","_createTextVNode","_","_hoisted_18","_component_el_input_number","customAmount","min","max","step","waterHistory","length","_hoisted_19","_hoisted_20","entry","index","_hoisted_21","formatDay","date","_hoisted_22","_normalizeClass","_hoisted_23","Math","round"],"sources":["D:\\trpo backup\\trpo\\client\\src\\views\\WaterTracker.vue"],"sourcesContent":["<template>\r\n  <div class=\"water-tracker\">\r\n    <h1 class=\"text-2xl font-bold mb-6 text-white\">Трекер воды</h1>\r\n    \r\n    <!-- Карточка с отслеживанием воды -->\r\n    <div class=\"water-card\">\r\n      <div class=\"info-section\">\r\n        <div class=\"date-control\">\r\n          <el-button @click=\"changeDate(-1)\" icon=\"el-icon-arrow-left\" circle></el-button>\r\n          <el-date-picker\r\n            v-model=\"selectedDate\"\r\n            type=\"date\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            placeholder=\"Выберите дату\"\r\n            @change=\"loadWaterStatus\"\r\n          ></el-date-picker>\r\n          <el-button @click=\"changeDate(1)\" icon=\"el-icon-arrow-right\" circle></el-button>\r\n        </div>\r\n\r\n        <div class=\"water-info\">\r\n          <div class=\"water-stats\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Выпито</div>\r\n              <div class=\"stat-value\">{{ waterAmount }} мл</div>\r\n            </div>\r\n            <div class=\"stat-divider\"></div>\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Норма</div>\r\n              <div class=\"stat-value\">{{ waterNorm }} мл</div>\r\n            </div>\r\n            <div class=\"stat-divider\"></div>\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Осталось</div>\r\n              <div class=\"stat-value\">{{ remainingAmount }} мл</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"water-progress-container\">\r\n            <div class=\"water-graphic\">\r\n              <div class=\"water-level\" :style=\"{ height: `${percentCompleted}%` }\">\r\n                <div class=\"water-waves\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress-text\">{{ percentCompleted }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"add-water-section\">\r\n        <h3 class=\"section-title\">Добавить воду</h3>\r\n        \r\n        <div class=\"quick-add-buttons\">\r\n          <el-button \r\n            v-for=\"amount in [100, 200, 300, 500]\" \r\n            :key=\"amount\"\r\n            class=\"quick-add-button\"\r\n            @click=\"addWater(amount)\"\r\n          >\r\n            +{{ amount }} мл\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div class=\"custom-amount\">\r\n          <el-input-number\r\n            v-model=\"customAmount\"\r\n            :min=\"1\"\r\n            :max=\"5000\"\r\n            :step=\"50\"\r\n            placeholder=\"Введите объем\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"addWater(customAmount)\">\r\n            Добавить воду\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"water-history-section\" v-if=\"waterHistory.length > 0\">\r\n        <h3 class=\"section-title\">История потребления воды</h3>\r\n        <div class=\"history-chart\">\r\n          <div\r\n            v-for=\"(entry, index) in waterHistory\"\r\n            :key=\"index\"\r\n            class=\"history-bar\"\r\n          >\r\n            <div class=\"history-day\">{{ formatDay(entry.date) }}</div>\r\n            <div class=\"history-bar-container\">\r\n              <div \r\n                class=\"history-bar-fill\"\r\n                :style=\"{ height: `${entry.percentCompleted}%` }\"\r\n                :class=\"{ 'current': entry.date === selectedDate }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"history-amount\">{{ Math.round(entry.amount / 100) / 10 }}л</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"water-tips\">\r\n      <h3 class=\"tips-title\">Советы для достаточного потребления воды:</h3>\r\n      <ul class=\"tips-list\">\r\n        <li>Начинайте день со стакана воды</li>\r\n        <li>Установите регулярные напоминания</li>\r\n        <li>Носите с собой многоразовую бутылку</li>\r\n        <li>Пейте стакан воды за 30 минут до еды</li>\r\n        <li>Добавляйте в воду ломтики фруктов для вкуса</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'WaterTrackerPage',\r\n  data() {\r\n    return {\r\n      selectedDate: new Date().toISOString().split('T')[0], // Текущая дата в формате YYYY-MM-DD\r\n      waterAmount: 0, // Выпито воды в мл\r\n      waterNorm: 2000, // Норма воды в мл (будет рассчитана динамически)\r\n      percentCompleted: 0, // Процент выполнения дневной нормы\r\n      customAmount: 250, // Пользовательский объем добавляемой воды\r\n      loading: false,\r\n      waterHistory: [] // История потребления воды\r\n    };\r\n  },\r\n  computed: {\r\n    remainingAmount() {\r\n      const remaining = this.waterNorm - this.waterAmount;\r\n      return remaining > 0 ? remaining : 0;\r\n    }\r\n  },\r\n  created() {\r\n    // Загружаем данные о воде при создании компонента\r\n    this.loadWaterStatus();\r\n    \r\n    // Загружаем историю потребления воды\r\n    this.loadWaterHistory();\r\n  },\r\n  methods: {\r\n    // Загрузка статуса потребления воды за выбранную дату\r\n    async loadWaterStatus() {\r\n      this.loading = true;\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          ElMessage.warning('Необходимо авторизоваться для доступа к трекеру воды');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.get('http://localhost:3000/api/water/status', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          params: { date: this.selectedDate }\r\n        });\r\n        \r\n        this.waterAmount = response.data.amount;\r\n        this.waterNorm = response.data.norm;\r\n        this.percentCompleted = response.data.percentCompleted;\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке данных о потреблении воды:', error);\r\n        ElMessage.error('Не удалось загрузить данные о потреблении воды');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // Загрузка истории потребления воды\r\n    async loadWaterHistory() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n        \r\n        const response = await axios.get('http://localhost:3000/api/water/history', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        this.waterHistory = response.data.history;\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке истории потребления воды:', error);\r\n      }\r\n    },\r\n    \r\n    // Добавление записи о выпитой воде\r\n    async addWater(amount) {\r\n      if (!amount || amount <= 0) {\r\n        ElMessage.warning('Укажите корректное количество воды');\r\n        return;\r\n      }\r\n      \r\n      this.loading = true;\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          ElMessage.warning('Необходимо авторизоваться для добавления записи о воде');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/water/track', {\r\n          amount,\r\n          date: this.selectedDate\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // Обновляем данные из ответа\r\n        const waterData = response.data.water;\r\n        this.waterAmount = waterData.amount;\r\n        this.waterNorm = waterData.norm;\r\n        this.percentCompleted = waterData.percentCompleted;\r\n        \r\n        // Показываем сообщение об успехе\r\n        ElMessage.success(`Добавлено ${amount} мл воды`);\r\n        \r\n        // Обновляем историю потребления\r\n        this.loadWaterHistory();\r\n      } catch (error) {\r\n        console.error('Ошибка при добавлении записи о воде:', error);\r\n        ElMessage.error('Не удалось добавить запись о воде');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // Изменение выбранной даты\r\n    changeDate(days) {\r\n      const date = new Date(this.selectedDate);\r\n      date.setDate(date.getDate() + days);\r\n      this.selectedDate = date.toISOString().split('T')[0];\r\n      this.loadWaterStatus();\r\n    },\r\n    \r\n    // Форматирование дня недели для истории потребления\r\n    formatDay(dateStr) {\r\n      const date = new Date(dateStr);\r\n      const days = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n      return days[date.getDay()];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.water-tracker {\r\n  padding: 2rem;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Основная карточка трекера воды */\r\n.water-card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n/* Секция с информацией о воде */\r\n.info-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.date-control {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.water-info {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n}\r\n\r\n.water-stats {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-width: 300px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color:white;\r\n}\r\n\r\n.stat-divider {\r\n  width: 1px;\r\n  background-color: #eee;\r\n  height: 50px;\r\n}\r\n\r\n.water-progress-container {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 200px;\r\n}\r\n\r\n.water-graphic {\r\n  width: 120px;\r\n  height: 200px;\r\n  border-radius: 60px;\r\n  border: 2px solid #3498db;\r\n  overflow: hidden;\r\n  background-color: #f5f5f5;\r\n  position: relative;\r\n  margin-right: 1.5rem;\r\n}\r\n\r\n.water-level {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #3498db;\r\n  transition: height 0.5s;\r\n  overflow: hidden;\r\n}\r\n\r\n.water-waves {\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 20px;\r\n  background: linear-gradient(\r\n    transparent,\r\n    rgba(255, 255, 255, 0.3),\r\n    transparent \r\n  );\r\n  animation: waveAnimation 2s infinite linear;\r\n}\r\n\r\n@keyframes waveAnimation {\r\n  0% { \r\n    transform: translateX(-50%); \r\n  }\r\n  100% { \r\n    transform: translateX(50%); \r\n  }\r\n}\r\n\r\n.progress-text {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #3498db;\r\n}\r\n\r\n/* Секция добавления воды */\r\n.add-water-section {\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid #eee;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.section-title {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.quick-add-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.quick-add-button {\r\n  min-width: 100px;\r\n}\r\n\r\n.custom-amount {\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n/* История потребления воды */\r\n.water-history-section {\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.history-chart {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n  height: 200px;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.history-bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 50px;\r\n}\r\n\r\n.history-day {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.history-bar-container {\r\n  width: 30px;\r\n  height: 120px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.history-bar-fill {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #3498db;\r\n  transition: height 0.5s;\r\n}\r\n\r\n.history-bar-fill.current {\r\n  background-color: #2ecc71;\r\n}\r\n\r\n.history-amount {\r\n  font-size: 0.8rem;\r\n  color: #333;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* Советы по потреблению воды */\r\n.water-tips {\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.tips-title {\r\n  color:rgb(0, 0, 0);\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.tips-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 0.5rem;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.tips-list li {\r\n  color:rgb(40, 81, 2);\r\n}\r\n\r\n/* Адаптивность */\r\n@media (max-width: 768px) {\r\n  .water-stats {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .stat-divider {\r\n    width: 80%;\r\n    height: 1px;\r\n  }\r\n  \r\n  .water-info {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .water-progress-container {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .water-graphic {\r\n    margin-right: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .history-chart {\r\n    overflow-x: auto;\r\n    padding-bottom: 1rem;\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}