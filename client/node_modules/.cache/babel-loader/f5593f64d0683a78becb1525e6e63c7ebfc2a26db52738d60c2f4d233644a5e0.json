{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n        name: '',\n        age: '',\n        height: '',\n        weight: ''\n      },\n      loading: false,\n      error: null\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/register', this.form);\n        // Здесь можно добавить обработку успешной регистрации\n        console.log('Регистрация успешна:', response.data);\n      } catch (error) {\n        this.error = error.response?.data?.message || 'Произошла ошибка при регистрации';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","email","password","age","height","weight","loading","error","methods","handleSubmit","response","post","console","log","message"],"sources":["D:\\TRPO\\client\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-form\">\r\n    <h2>Регистрация</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"form.email\"\r\n          required\r\n          placeholder=\"Введите email\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Пароль:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"form.password\"\r\n          required\r\n          placeholder=\"Введите пароль\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Имя:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          v-model=\"form.name\"\r\n          required\r\n          placeholder=\"Введите имя\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"age\">Возраст:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"age\"\r\n          v-model=\"form.age\"\r\n          required\r\n          min=\"1\"\r\n          max=\"120\"\r\n          placeholder=\"Введите возраст\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"height\">Рост (см):</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"height\"\r\n          v-model=\"form.height\"\r\n          required\r\n          min=\"100\"\r\n          max=\"250\"\r\n          placeholder=\"Введите рост\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"weight\">Вес (кг):</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"weight\"\r\n          v-model=\"form.weight\"\r\n          required\r\n          min=\"30\"\r\n          max=\"300\"\r\n          step=\"0.1\"\r\n          placeholder=\"Введите вес\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? 'Регистрация...' : 'Зарегистрироваться' }}\r\n      </button>\r\n\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        {{ error }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'RegisterForm',\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        age: '',\r\n        height: '',\r\n        weight: ''\r\n      },\r\n      loading: false,\r\n      error: null\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/auth/register', this.form);\r\n        // Здесь можно добавить обработку успешной регистрации\r\n        console.log('Регистрация успешна:', response.data);\r\n      } catch (error) {\r\n        this.error = error.response?.data?.message || 'Произошла ошибка при регистрации';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n</style> "],"mappings":"AAyFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZJ,IAAI,EAAE,EAAE;QACRK,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACH,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MAEjB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,yCAAyC,EAAE,IAAI,CAACX,IAAI,CAAC;QACvF;QACAY,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAACX,IAAI,CAAC;MACpD,EAAE,OAAOQ,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACG,QAAQ,EAAEX,IAAI,EAAEe,OAAM,IAAK,kCAAkC;MAClF,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}