{"ast":null,"code":"import _regeneratorRuntime from \"D:/trpo backup/trpo/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/trpo backup/trpo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'WaterTrackerPage',\n  data: function data() {\n    return {\n      selectedDate: new Date().toISOString().split('T')[0],\n      // Текущая дата в формате YYYY-MM-DD\n      waterAmount: 0,\n      // Выпито воды в мл\n      waterNorm: 2000,\n      // Норма воды в мл (будет рассчитана динамически)\n      percentCompleted: 0,\n      // Процент выполнения дневной нормы\n      customAmount: 250,\n      // Пользовательский объем добавляемой воды\n      removeAmount: 100,\n      // Пользовательский объем удаляемой воды\n      loading: false,\n      waterHistory: [] // История потребления воды\n    };\n  },\n  computed: {\n    remainingAmount: function remainingAmount() {\n      var remaining = this.waterNorm - this.waterAmount;\n      return remaining > 0 ? remaining : 0;\n    },\n    // Вычисляемое свойство для отображения истории с выбранной датой по центру\n    displayedHistory: function displayedHistory() {\n      var _this = this;\n      if (this.waterHistory.length === 0) return [];\n\n      // Найдем запись для выбранной даты или создадим виртуальную\n      var selectedEntry = this.waterHistory.find(function (entry) {\n        return entry.date === _this.selectedDate;\n      }) || {\n        date: this.selectedDate,\n        amount: this.waterAmount,\n        // Использовать текущее значение для выбранной даты\n        percentCompleted: this.percentCompleted,\n        isVirtual: true\n      };\n\n      // Создаем массив дат для отображения (3 до, 1 текущая, 3 после)\n      var dates = [];\n      var today = new Date(this.selectedDate);\n\n      // Добавляем 3 даты до выбранной\n      for (var i = 3; i > 0; i--) {\n        var date = new Date(today);\n        date.setDate(date.getDate() - i);\n        dates.push(date.toISOString().split('T')[0]);\n      }\n\n      // Добавляем выбранную дату\n      dates.push(this.selectedDate);\n\n      // Добавляем 3 даты после выбранной\n      for (var _i = 1; _i <= 3; _i++) {\n        var _date = new Date(today);\n        _date.setDate(_date.getDate() + _i);\n        dates.push(_date.toISOString().split('T')[0]);\n      }\n\n      // Создаем массив записей на основе дат\n      return dates.map(function (date) {\n        // Если это выбранная дата, используем найденную или виртуальную запись\n        if (date === _this.selectedDate) {\n          return selectedEntry;\n        }\n\n        // Ищем запись в истории для этой даты\n        var entry = _this.waterHistory.find(function (entry) {\n          return entry.date === date;\n        });\n\n        // Если запись найдена, используем её\n        if (entry) return entry;\n\n        // Иначе создаем виртуальную запись\n        return {\n          date: date,\n          amount: 0,\n          percentCompleted: 0,\n          isVirtual: true\n        };\n      });\n    }\n  },\n  created: function created() {\n    // Загружаем данные о воде при создании компонента\n    this.loadWaterStatus();\n\n    // Загружаем историю потребления воды\n    this.loadWaterHistory();\n  },\n  methods: {\n    // Метод для расчета диапазона записей для отображения\n    calculateDisplayRange: function calculateDisplayRange(historyArray, selectedIndex) {\n      // Если записей меньше или равно 7, показываем все\n      if (historyArray.length <= 7) return historyArray;\n\n      // Рассчитываем начальный и конечный индексы для отображения 7 записей\n      // с выбранной датой по центру (3 слева + выбранная + 3 справа)\n      var startIndex = selectedIndex - 3;\n      var endIndex = selectedIndex + 4; // +4, потому что slice не включает конечный индекс\n\n      // Корректируем индексы, если они выходят за границы массива\n      if (startIndex < 0) {\n        endIndex += Math.abs(startIndex);\n        startIndex = 0;\n      }\n      if (endIndex > historyArray.length) {\n        startIndex -= endIndex - historyArray.length;\n        endIndex = historyArray.length;\n\n        // Еще раз проверяем нижнюю границу\n        if (startIndex < 0) startIndex = 0;\n      }\n      return historyArray.slice(startIndex, endIndex);\n    },\n    // Загрузка статуса потребления воды за выбранную дату\n    loadWaterStatus: function loadWaterStatus() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this2.loading = true;\n              _context.prev = 1;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 6;\n                break;\n              }\n              ElMessage.warning('Необходимо авторизоваться для доступа к трекеру воды');\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.next = 8;\n              return axios.get('http://localhost:3000/api/water/status', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                params: {\n                  date: _this2.selectedDate\n                }\n              });\n            case 8:\n              response = _context.sent;\n              _this2.waterAmount = response.data.amount;\n              _this2.waterNorm = response.data.norm;\n              _this2.percentCompleted = response.data.percentCompleted;\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Ошибка при загрузке данных о потреблении воды:', _context.t0);\n              ElMessage.error('Не удалось загрузить данные о потреблении воды');\n            case 18:\n              _context.prev = 18;\n              _this2.loading = false;\n              return _context.finish(18);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 14, 18, 21]]);\n      }))();\n    },\n    // Загрузка истории потребления воды\n    loadWaterHistory: function loadWaterHistory() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 4:\n              _context2.next = 6;\n              return axios.get('http://localhost:3000/api/water/history', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 6:\n              response = _context2.sent;\n              // Сортируем историю по дате (от ранних к поздним)\n              _this3.waterHistory = response.data.history.sort(function (a, b) {\n                return new Date(a.date) - new Date(b.date);\n              });\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Ошибка при загрузке истории потребления воды:', _context2.t0);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      }))();\n    },\n    // Добавление записи о выпитой воде\n    addWater: function addWater(amount) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response, waterData;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!amount || amount <= 0)) {\n                _context3.next = 3;\n                break;\n              }\n              ElMessage.warning('Укажите корректное количество воды');\n              return _context3.abrupt(\"return\");\n            case 3:\n              _this4.loading = true;\n              _context3.prev = 4;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context3.next = 9;\n                break;\n              }\n              ElMessage.warning('Необходимо авторизоваться для добавления записи о воде');\n              return _context3.abrupt(\"return\");\n            case 9:\n              _context3.next = 11;\n              return axios.post('http://localhost:3000/api/water/track', {\n                amount: amount,\n                date: _this4.selectedDate\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              response = _context3.sent;\n              // Обновляем данные из ответа\n              waterData = response.data.water;\n              _this4.waterAmount = waterData.amount;\n              _this4.waterNorm = waterData.norm;\n              _this4.percentCompleted = waterData.percentCompleted;\n\n              // Показываем сообщение об успехе\n              ElMessage.success(\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E \".concat(amount, \" \\u043C\\u043B \\u0432\\u043E\\u0434\\u044B\"));\n\n              // Обновляем историю потребления\n              _this4.loadWaterHistory();\n              _context3.next = 24;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](4);\n              console.error('Ошибка при добавлении записи о воде:', _context3.t0);\n              ElMessage.error('Не удалось добавить запись о воде');\n            case 24:\n              _context3.prev = 24;\n              _this4.loading = false;\n              return _context3.finish(24);\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[4, 20, 24, 27]]);\n      }))();\n    },\n    // Удаление записи о выпитой воде\n    removeWater: function removeWater(amount) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, response, waterData;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(!amount || amount <= 0 || amount > _this5.waterAmount)) {\n                _context4.next = 3;\n                break;\n              }\n              ElMessage.warning('Укажите корректное количество воды для удаления');\n              return _context4.abrupt(\"return\");\n            case 3:\n              _this5.loading = true;\n              _context4.prev = 4;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context4.next = 9;\n                break;\n              }\n              ElMessage.warning('Необходимо авторизоваться для удаления записи о воде');\n              return _context4.abrupt(\"return\");\n            case 9:\n              _context4.next = 11;\n              return axios[\"delete\"]('http://localhost:3000/api/water/remove', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                data: {\n                  amount: amount,\n                  date: _this5.selectedDate\n                }\n              });\n            case 11:\n              response = _context4.sent;\n              // Обновляем данные из ответа\n              waterData = response.data.water;\n              _this5.waterAmount = waterData.amount;\n              _this5.waterNorm = waterData.norm;\n              _this5.percentCompleted = waterData.percentCompleted;\n\n              // Показываем сообщение об успехе\n              ElMessage.success(\"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u043E \".concat(amount, \" \\u043C\\u043B \\u0432\\u043E\\u0434\\u044B\"));\n\n              // Обновляем историю потребления\n              _this5.loadWaterHistory();\n              _context4.next = 24;\n              break;\n            case 20:\n              _context4.prev = 20;\n              _context4.t0 = _context4[\"catch\"](4);\n              console.error('Ошибка при удалении записи о воде:', _context4.t0);\n              if (_context4.t0.response && _context4.t0.response.data) {\n                ElMessage.error(_context4.t0.response.data.message || 'Не удалось удалить запись о воде');\n              } else {\n                ElMessage.error('Не удалось удалить запись о воде');\n              }\n            case 24:\n              _context4.prev = 24;\n              _this5.loading = false;\n              return _context4.finish(24);\n            case 27:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[4, 20, 24, 27]]);\n      }))();\n    },\n    // Изменение выбранной даты\n    changeDate: function changeDate(days) {\n      var date = new Date(this.selectedDate);\n      date.setDate(date.getDate() + days);\n      this.selectedDate = date.toISOString().split('T')[0];\n      this.loadWaterStatus();\n    },\n    // Форматирование дня недели для истории потребления\n    formatDay: function formatDay(dateStr) {\n      var date = new Date(dateStr);\n      var days = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\n      return days[date.getDay()];\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessage","name","data","selectedDate","Date","toISOString","split","waterAmount","waterNorm","percentCompleted","customAmount","removeAmount","loading","waterHistory","computed","remainingAmount","remaining","displayedHistory","_this","length","selectedEntry","find","entry","date","amount","isVirtual","dates","today","i","setDate","getDate","push","map","created","loadWaterStatus","loadWaterHistory","methods","calculateDisplayRange","historyArray","selectedIndex","startIndex","endIndex","Math","abs","slice","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","warning","abrupt","get","headers","Authorization","concat","params","sent","norm","t0","console","error","finish","stop","_this3","_callee2","_callee2$","_context2","history","sort","a","b","addWater","_this4","_callee3","waterData","_callee3$","_context3","post","water","success","removeWater","_this5","_callee4","_callee4$","_context4","message","changeDate","days","formatDay","dateStr","getDay"],"sources":["D:\\trpo backup\\trpo\\client\\src\\views\\WaterTracker.vue"],"sourcesContent":["<template>\r\n  <div class=\"water-tracker\">\r\n    <h1 class=\"text-2xl font-bold mb-6\" style=\"color: white;\">Трекер воды</h1>\r\n    \r\n    <!-- Карточка с отслеживанием воды -->\r\n    <div class=\"water-card\">\r\n      <div class=\"info-section\">\r\n        <div class=\"date-control\">\r\n          <el-button @click=\"changeDate(-1)\" icon=\"el-icon-arrow-left\" circle></el-button>\r\n          <el-date-picker\r\n            v-model=\"selectedDate\"\r\n            type=\"date\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            placeholder=\"Выберите дату\"\r\n            @change=\"loadWaterStatus\"\r\n          ></el-date-picker>\r\n          <el-button @click=\"changeDate(1)\" icon=\"el-icon-arrow-right\" circle></el-button>\r\n        </div>\r\n\r\n        <div class=\"water-info\">\r\n          <div class=\"water-stats\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Выпито</div>\r\n              <div class=\"stat-value\">{{ waterAmount }} мл</div>\r\n            </div>\r\n            <div class=\"stat-divider\"></div>\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Норма</div>\r\n              <div class=\"stat-value\">{{ waterNorm }} мл</div>\r\n            </div>\r\n            <div class=\"stat-divider\"></div>\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-label\">Осталось</div>\r\n              <div class=\"stat-value\">{{ remainingAmount }} мл</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"water-progress-container\">\r\n            <div class=\"water-graphic\">\r\n              <div class=\"water-level\" :style=\"{ height: `${percentCompleted}%` }\">\r\n                <div class=\"water-waves\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"progress-text\">{{ percentCompleted }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"add-water-section\">\r\n        <h3 class=\"section-title\">Добавить воду</h3>\r\n        \r\n        <div class=\"quick-add-buttons\">\r\n          <el-button \r\n            v-for=\"amount in [100, 200, 300, 500]\" \r\n            :key=\"amount\"\r\n            class=\"quick-add-button\"\r\n            @click=\"addWater(amount)\"\r\n          >\r\n            +{{ amount }} мл\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div class=\"custom-amount\">\r\n          <el-input-number\r\n            v-model=\"customAmount\"\r\n            :min=\"1\"\r\n            :max=\"5000\"\r\n            :step=\"50\"\r\n            placeholder=\"Введите объем\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"addWater(customAmount)\">\r\n            Добавить воду\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Секция удаления воды -->\r\n      <div class=\"remove-water-section\" v-if=\"waterAmount > 0\">\r\n        <h3 class=\"section-title\">Удалить воду</h3>\r\n        \r\n        <div class=\"quick-remove-buttons\">\r\n          <el-button \r\n            v-for=\"amount in [100, 200, 300, 500]\" \r\n            :key=\"amount\"\r\n            class=\"quick-remove-button\"\r\n            @click=\"removeWater(amount)\"\r\n            :disabled=\"amount > waterAmount\"\r\n          >\r\n            -{{ amount }} мл\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div class=\"custom-amount\">\r\n          <el-input-number\r\n            v-model=\"removeAmount\"\r\n            :min=\"1\"\r\n            :max=\"waterAmount\"\r\n            :step=\"50\"\r\n            placeholder=\"Введите объем\"\r\n          />\r\n          <el-button type=\"danger\" @click=\"removeWater(removeAmount)\" :disabled=\"!removeAmount || removeAmount <= 0\">\r\n            Удалить воду\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"water-history-section\" v-if=\"waterHistory.length > 0\">\r\n        <h3 class=\"section-title\">История потребления воды</h3>\r\n        <div class=\"history-chart\">\r\n          <div\r\n            v-for=\"(entry, index) in displayedHistory\"\r\n            :key=\"index\"\r\n            class=\"history-bar\"\r\n          >\r\n            <div class=\"history-day\">{{ formatDay(entry.date) }}</div>\r\n            <div class=\"history-bar-container\">\r\n              <div \r\n                class=\"history-bar-fill\"\r\n                :style=\"{ height: `${entry.percentCompleted}%` }\"\r\n                :class=\"{ 'current': entry.date === selectedDate }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"history-amount\">{{ Math.round(entry.amount / 100) / 10 }}л</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"water-tips\">\r\n      <h3 class=\"tips-title\">Советы для достаточного потребления воды:</h3>\r\n      <ul class=\"tips-list\">\r\n        <li>Начинайте день со стакана воды</li>\r\n        <li>Установите регулярные напоминания</li>\r\n        <li>Носите с собой многоразовую бутылку</li>\r\n        <li>Пейте стакан воды за 30 минут до еды</li>\r\n        <li>Добавляйте в воду ломтики фруктов для вкуса</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'WaterTrackerPage',\r\n  data() {\r\n    return {\r\n      selectedDate: new Date().toISOString().split('T')[0], // Текущая дата в формате YYYY-MM-DD\r\n      waterAmount: 0, // Выпито воды в мл\r\n      waterNorm: 2000, // Норма воды в мл (будет рассчитана динамически)\r\n      percentCompleted: 0, // Процент выполнения дневной нормы\r\n      customAmount: 250, // Пользовательский объем добавляемой воды\r\n      removeAmount: 100, // Пользовательский объем удаляемой воды\r\n      loading: false,\r\n      waterHistory: [] // История потребления воды\r\n    };\r\n  },\r\n  computed: {\r\n    remainingAmount() {\r\n      const remaining = this.waterNorm - this.waterAmount;\r\n      return remaining > 0 ? remaining : 0;\r\n    },\r\n    \r\n    // Вычисляемое свойство для отображения истории с выбранной датой по центру\r\n    displayedHistory() {\r\n      if (this.waterHistory.length === 0) return [];\r\n      \r\n      // Найдем запись для выбранной даты или создадим виртуальную\r\n      const selectedEntry = this.waterHistory.find(entry => entry.date === this.selectedDate) || {\r\n        date: this.selectedDate,\r\n        amount: this.waterAmount, // Использовать текущее значение для выбранной даты\r\n        percentCompleted: this.percentCompleted,\r\n        isVirtual: true\r\n      };\r\n      \r\n      // Создаем массив дат для отображения (3 до, 1 текущая, 3 после)\r\n      const dates = [];\r\n      const today = new Date(this.selectedDate);\r\n      \r\n      // Добавляем 3 даты до выбранной\r\n      for (let i = 3; i > 0; i--) {\r\n        const date = new Date(today);\r\n        date.setDate(date.getDate() - i);\r\n        dates.push(date.toISOString().split('T')[0]);\r\n      }\r\n      \r\n      // Добавляем выбранную дату\r\n      dates.push(this.selectedDate);\r\n      \r\n      // Добавляем 3 даты после выбранной\r\n      for (let i = 1; i <= 3; i++) {\r\n        const date = new Date(today);\r\n        date.setDate(date.getDate() + i);\r\n        dates.push(date.toISOString().split('T')[0]);\r\n      }\r\n      \r\n      // Создаем массив записей на основе дат\r\n      return dates.map(date => {\r\n        // Если это выбранная дата, используем найденную или виртуальную запись\r\n        if (date === this.selectedDate) {\r\n          return selectedEntry;\r\n        }\r\n        \r\n        // Ищем запись в истории для этой даты\r\n        const entry = this.waterHistory.find(entry => entry.date === date);\r\n        \r\n        // Если запись найдена, используем её\r\n        if (entry) return entry;\r\n        \r\n        // Иначе создаем виртуальную запись\r\n        return {\r\n          date,\r\n          amount: 0,\r\n          percentCompleted: 0,\r\n          isVirtual: true\r\n        };\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    // Загружаем данные о воде при создании компонента\r\n    this.loadWaterStatus();\r\n    \r\n    // Загружаем историю потребления воды\r\n    this.loadWaterHistory();\r\n  },\r\n  methods: {\r\n    // Метод для расчета диапазона записей для отображения\r\n    calculateDisplayRange(historyArray, selectedIndex) {\r\n      // Если записей меньше или равно 7, показываем все\r\n      if (historyArray.length <= 7) return historyArray;\r\n      \r\n      // Рассчитываем начальный и конечный индексы для отображения 7 записей\r\n      // с выбранной датой по центру (3 слева + выбранная + 3 справа)\r\n      let startIndex = selectedIndex - 3;\r\n      let endIndex = selectedIndex + 4; // +4, потому что slice не включает конечный индекс\r\n      \r\n      // Корректируем индексы, если они выходят за границы массива\r\n      if (startIndex < 0) {\r\n        endIndex += Math.abs(startIndex);\r\n        startIndex = 0;\r\n      }\r\n      \r\n      if (endIndex > historyArray.length) {\r\n        startIndex -= (endIndex - historyArray.length);\r\n        endIndex = historyArray.length;\r\n        \r\n        // Еще раз проверяем нижнюю границу\r\n        if (startIndex < 0) startIndex = 0;\r\n      }\r\n      \r\n      return historyArray.slice(startIndex, endIndex);\r\n    },\r\n    \r\n    // Загрузка статуса потребления воды за выбранную дату\r\n    async loadWaterStatus() {\r\n      this.loading = true;\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          ElMessage.warning('Необходимо авторизоваться для доступа к трекеру воды');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.get('http://localhost:3000/api/water/status', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          params: { date: this.selectedDate }\r\n        });\r\n        \r\n        this.waterAmount = response.data.amount;\r\n        this.waterNorm = response.data.norm;\r\n        this.percentCompleted = response.data.percentCompleted;\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке данных о потреблении воды:', error);\r\n        ElMessage.error('Не удалось загрузить данные о потреблении воды');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // Загрузка истории потребления воды\r\n    async loadWaterHistory() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n        \r\n        const response = await axios.get('http://localhost:3000/api/water/history', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // Сортируем историю по дате (от ранних к поздним)\r\n        this.waterHistory = response.data.history.sort((a, b) => {\r\n          return new Date(a.date) - new Date(b.date);\r\n        });\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке истории потребления воды:', error);\r\n      }\r\n    },\r\n    \r\n    // Добавление записи о выпитой воде\r\n    async addWater(amount) {\r\n      if (!amount || amount <= 0) {\r\n        ElMessage.warning('Укажите корректное количество воды');\r\n        return;\r\n      }\r\n      \r\n      this.loading = true;\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          ElMessage.warning('Необходимо авторизоваться для добавления записи о воде');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/water/track', {\r\n          amount,\r\n          date: this.selectedDate\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // Обновляем данные из ответа\r\n        const waterData = response.data.water;\r\n        this.waterAmount = waterData.amount;\r\n        this.waterNorm = waterData.norm;\r\n        this.percentCompleted = waterData.percentCompleted;\r\n        \r\n        // Показываем сообщение об успехе\r\n        ElMessage.success(`Добавлено ${amount} мл воды`);\r\n        \r\n        // Обновляем историю потребления\r\n        this.loadWaterHistory();\r\n      } catch (error) {\r\n        console.error('Ошибка при добавлении записи о воде:', error);\r\n        ElMessage.error('Не удалось добавить запись о воде');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // Удаление записи о выпитой воде\r\n    async removeWater(amount) {\r\n      if (!amount || amount <= 0 || amount > this.waterAmount) {\r\n        ElMessage.warning('Укажите корректное количество воды для удаления');\r\n        return;\r\n      }\r\n      \r\n      this.loading = true;\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          ElMessage.warning('Необходимо авторизоваться для удаления записи о воде');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.delete('http://localhost:3000/api/water/remove', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          data: {\r\n            amount,\r\n            date: this.selectedDate\r\n          }\r\n        });\r\n        \r\n        // Обновляем данные из ответа\r\n        const waterData = response.data.water;\r\n        this.waterAmount = waterData.amount;\r\n        this.waterNorm = waterData.norm;\r\n        this.percentCompleted = waterData.percentCompleted;\r\n        \r\n        // Показываем сообщение об успехе\r\n        ElMessage.success(`Удалено ${amount} мл воды`);\r\n        \r\n        // Обновляем историю потребления\r\n        this.loadWaterHistory();\r\n      } catch (error) {\r\n        console.error('Ошибка при удалении записи о воде:', error);\r\n        if (error.response && error.response.data) {\r\n          ElMessage.error(error.response.data.message || 'Не удалось удалить запись о воде');\r\n        } else {\r\n          ElMessage.error('Не удалось удалить запись о воде');\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // Изменение выбранной даты\r\n    changeDate(days) {\r\n      const date = new Date(this.selectedDate);\r\n      date.setDate(date.getDate() + days);\r\n      this.selectedDate = date.toISOString().split('T')[0];\r\n      this.loadWaterStatus();\r\n    },\r\n    \r\n    // Форматирование дня недели для истории потребления\r\n    formatDay(dateStr) {\r\n      const date = new Date(dateStr);\r\n      const days = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n      return days[date.getDay()];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.water-tracker {\r\n  padding: 2rem;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Основная карточка трекера воды */\r\n.water-card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n/* Секция с информацией о воде */\r\n.info-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.date-control {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.water-info {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n}\r\n\r\n.water-stats {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-width: 300px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.stat-divider {\r\n  width: 1px;\r\n  background-color: #eee;\r\n  height: 50px;\r\n}\r\n\r\n.water-progress-container {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 200px;\r\n}\r\n\r\n.water-graphic {\r\n  width: 120px;\r\n  height: 200px;\r\n  border-radius: 60px;\r\n  border: 2px solid #3498db;\r\n  overflow: hidden;\r\n  background-color: #f5f5f5;\r\n  position: relative;\r\n  margin-right: 1.5rem;\r\n}\r\n\r\n.water-level {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #3498db;\r\n  transition: height 0.5s;\r\n  overflow: hidden;\r\n}\r\n\r\n.water-waves {\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 20px;\r\n  background: linear-gradient(\r\n    transparent,\r\n    rgba(255, 255, 255, 0.3),\r\n    transparent \r\n  );\r\n  animation: waveAnimation 2s infinite linear;\r\n}\r\n\r\n@keyframes waveAnimation {\r\n  0% { \r\n    transform: translateX(-50%); \r\n  }\r\n  100% { \r\n    transform: translateX(50%); \r\n  }\r\n}\r\n\r\n.progress-text {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #3498db;\r\n}\r\n\r\n/* Секция добавления воды */\r\n.add-water-section {\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid #eee;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.section-title {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.quick-add-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.quick-add-button {\r\n  min-width: 100px;\r\n}\r\n\r\n.custom-amount {\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n/* История потребления воды */\r\n.water-history-section {\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.history-chart {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n  height: 200px;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.history-bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 50px;\r\n}\r\n\r\n.history-day {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.history-bar-container {\r\n  width: 30px;\r\n  height: 120px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.history-bar-fill {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #3498db;\r\n  transition: height 0.5s;\r\n}\r\n\r\n.history-bar-fill.current {\r\n  background-color: #2ecc71;\r\n}\r\n\r\n.history-bar .current-date .history-bar-container {\r\n  border: 2px solid #2ecc71;\r\n  box-shadow: 0 0 8px rgba(46, 204, 113, 0.5);\r\n}\r\n\r\n.history-amount {\r\n  font-size: 0.8rem;\r\n  color: #333;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* Советы по потреблению воды */\r\n.water-tips {\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.tips-title {\r\n  color:rgb(2, 78, 16);\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.tips-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 0.5rem;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.tips-list li {\r\n  color:rgb(2, 78, 16);\r\n}\r\n\r\n/* Адаптивность */\r\n@media (max-width: 768px) {\r\n  .water-stats {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .stat-divider {\r\n    width: 80%;\r\n    height: 1px;\r\n  }\r\n  \r\n  .water-info {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .water-progress-container {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .water-graphic {\r\n    margin-right: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .history-chart {\r\n    overflow-x: auto;\r\n    padding-bottom: 1rem;\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n\r\n/* Стили для кнопок быстрого удаления (сделать их белыми, как кнопки добавления) */\r\n.quick-remove-button.el-button {\r\n  background-color: white;\r\n  color: #606266;\r\n  border-color: #DCDFE6;\r\n}\r\n\r\n.quick-remove-button.el-button:hover {\r\n  color: #409EFF;\r\n  border-color: #c6e2ff;\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.quick-remove-button.el-button:disabled {\r\n  color: #C0C4CC;\r\n  cursor: not-allowed;\r\n  background-color: #FFF;\r\n  border-color: #EBEEF5;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}