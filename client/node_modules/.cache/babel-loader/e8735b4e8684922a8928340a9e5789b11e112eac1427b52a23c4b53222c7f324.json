{"ast":null,"code":"import _regeneratorRuntime from \"D:/trpo backup/trpo/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/trpo backup/trpo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'FoodDiaryPage',\n  data: function data() {\n    return {\n      searchQuery: '',\n      selectedMealType: 'breakfast',\n      // Выбранный тип приема пищи (завтрак по умолчанию)\n      selectedDate: new Date().toISOString().split('T')[0],\n      // Текущая дата в формате YYYY-MM-DD\n      meals: {\n        breakfast: [],\n        lunch: [],\n        dinner: [],\n        snack: []\n      },\n      totals: {\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0\n      },\n      loading: false,\n      addProductVisible: false,\n      isAdmin: false,\n      newProduct: {\n        name: '',\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0,\n        isPublic: false\n      },\n      productRules: {\n        name: [{\n          required: true,\n          message: 'Пожалуйста, введите название продукта',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          message: 'Название должно быть не менее 2 символов',\n          trigger: 'blur'\n        }],\n        calories: [{\n          required: true,\n          message: 'Пожалуйста, укажите калорийность',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 5000,\n          message: 'Калории должны быть от 0 до 5000',\n          trigger: 'blur'\n        }],\n        proteins: [{\n          required: true,\n          message: 'Пожалуйста, укажите содержание белков',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 500,\n          message: 'Белки должны быть от 0 до 500г',\n          trigger: 'blur'\n        }],\n        fats: [{\n          required: true,\n          message: 'Пожалуйста, укажите содержание жиров',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 500,\n          message: 'Жиры должны быть от 0 до 500г',\n          trigger: 'blur'\n        }],\n        carbs: [{\n          required: true,\n          message: 'Пожалуйста, укажите содержание углеводов',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 500,\n          message: 'Углеводы должны быть от 0 до 500г',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    // Проверка наличия приемов пищи\n    hasMeals: function hasMeals() {\n      return this.meals.breakfast.length > 0 || this.meals.lunch.length > 0 || this.meals.dinner.length > 0 || this.meals.snack.length > 0;\n    }\n  },\n  created: function created() {\n    // Проверяем, является ли пользователь администратором\n    this.checkIfAdmin();\n\n    // Загружаем приемы пищи для текущей даты\n    this.loadMeals();\n  },\n  methods: {\n    // Проверка прав администратора\n    checkIfAdmin: function checkIfAdmin() {\n      var token = localStorage.getItem('token');\n      if (token) {\n        try {\n          var tokenData = JSON.parse(atob(token.split('.')[1]));\n          this.isAdmin = tokenData.id === 1; // Считаем пользователя с id=1 администратором\n        } catch (error) {\n          console.error('Ошибка при проверке прав администратора:', error);\n          this.isAdmin = false;\n        }\n      } else {\n        this.isAdmin = false;\n      }\n    },\n    // Загрузка приемов пищи за выбранную дату\n    loadMeals: function loadMeals() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 6;\n                break;\n              }\n              ElMessage.warning('Необходимо авторизоваться для доступа к журналу питания');\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.next = 8;\n              return axios.get('http://localhost:3000/api/meals/get', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                params: {\n                  date: _this.selectedDate\n                }\n              });\n            case 8:\n              response = _context.sent;\n              // Заполняем приемы пищи и итоги из ответа сервера\n              _this.meals = response.data.meals;\n              _this.totals = response.data.totals;\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Ошибка при загрузке приемов пищи:', _context.t0);\n              ElMessage.error('Не удалось загрузить данные журнала питания');\n            case 17:\n              _context.prev = 17;\n              _this.loading = false;\n              return _context.finish(17);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 13, 17, 20]]);\n      }))();\n    },\n    // Изменение выбранной даты\n    changeDate: function changeDate(days) {\n      var date = new Date(this.selectedDate);\n      date.setDate(date.getDate() + days);\n      this.selectedDate = date.toISOString().split('T')[0];\n      this.loadMeals();\n    },\n    // Расчет итогов КБЖУ для конкретного типа приема пищи\n    getMealTotals: function getMealTotals(mealType) {\n      var totals = {\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0\n      };\n      this.meals[mealType].forEach(function (meal) {\n        totals.calories += meal.nutrition.calories;\n        totals.proteins += meal.nutrition.proteins;\n        totals.fats += meal.nutrition.fats;\n        totals.carbs += meal.nutrition.carbs;\n      });\n      return {\n        calories: Math.round(totals.calories),\n        proteins: Math.round(totals.proteins),\n        fats: Math.round(totals.fats),\n        carbs: Math.round(totals.carbs)\n      };\n    },\n    // Поиск продуктов с автодополнением\n    searchProducts: function searchProducts(queryString, callback) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, headers, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(queryString.length < 2)) {\n                _context2.next = 3;\n                break;\n              }\n              callback([]);\n              return _context2.abrupt(\"return\");\n            case 3:\n              _this2.loading = true;\n              _context2.prev = 4;\n              token = localStorage.getItem('token');\n              headers = token ? {\n                Authorization: \"Bearer \".concat(token)\n              } : {};\n              _context2.next = 9;\n              return axios.get('http://localhost:3000/api/products/search', {\n                params: {\n                  q: queryString,\n                  limit: 5\n                },\n                headers: headers\n              });\n            case 9:\n              response = _context2.sent;\n              callback(response.data);\n              _context2.next = 18;\n              break;\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.error('Ошибка при поиске продуктов:', _context2.t0);\n              ElMessage.error('Ошибка при поиске продуктов. Пожалуйста, попробуйте снова.');\n              callback([]);\n            case 18:\n              _context2.prev = 18;\n              _this2.loading = false;\n              return _context2.finish(18);\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 13, 18, 21]]);\n      }))();\n    },\n    // Обработка выбора продукта из списка\n    handleProductSelect: function handleProductSelect(item) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, quantity;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context3.next = 5;\n                break;\n              }\n              ElMessage.warning('Необходимо авторизоваться для добавления продуктов');\n              return _context3.abrupt(\"return\");\n            case 5:\n              // Стандартное количество - 100г\n              quantity = 100; // Отправляем запрос на сервер для добавления приема пищи\n              _context3.next = 8;\n              return axios.post('http://localhost:3000/api/meals/add', {\n                product_id: item.id,\n                quantity: quantity,\n                meal_type: _this3.selectedMealType,\n                date: _this3.selectedDate\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 8:\n              // Обновляем список приемов пищи\n              _this3.loadMeals();\n\n              // Очищаем строку поиска\n              _this3.searchQuery = '';\n              ElMessage.success('Продукт добавлен в журнал питания');\n              _context3.next = 17;\n              break;\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Ошибка при добавлении продукта в журнал питания:', _context3.t0);\n              ElMessage.error('Не удалось добавить продукт в журнал питания');\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 13]]);\n      }))();\n    },\n    // Удаление приема пищи из журнала\n    deleteMeal: function deleteMeal(mealId) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 4:\n              _context4.next = 6;\n              return axios[\"delete\"](\"http://localhost:3000/api/meals/\".concat(mealId), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 6:\n              // Обновляем список приемов пищи\n              _this4.loadMeals();\n              ElMessage.success('Продукт удален из журнала питания');\n              _context4.next = 14;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Ошибка при удалении приема пищи:', _context4.t0);\n              ElMessage.error('Не удалось удалить продукт из журнала питания');\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 10]]);\n      }))();\n    },\n    // Открыть модальное окно добавления продукта\n    openAddProductModal: function openAddProductModal() {\n      this.newProduct = {\n        name: '',\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0,\n        isPublic: false\n      };\n      this.addProductVisible = true;\n    },\n    // Добавление нового продукта\n    submitNewProduct: function submitNewProduct() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _this5.$refs.productForm.validate(/*#__PURE__*/function () {\n                var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(valid) {\n                  var token, productData, response, errorMessage;\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) switch (_context5.prev = _context5.next) {\n                      case 0:\n                        if (valid) {\n                          _context5.next = 2;\n                          break;\n                        }\n                        return _context5.abrupt(\"return\", false);\n                      case 2:\n                        _this5.loading = true;\n                        _context5.prev = 3;\n                        token = localStorage.getItem('token');\n                        if (token) {\n                          _context5.next = 7;\n                          break;\n                        }\n                        throw new Error('Требуется авторизация');\n                      case 7:\n                        // Преобразуем данные в правильный формат\n                        productData = {\n                          name: _this5.newProduct.name,\n                          calories: Number(_this5.newProduct.calories),\n                          proteins: Number(_this5.newProduct.proteins),\n                          fats: Number(_this5.newProduct.fats),\n                          carbs: Number(_this5.newProduct.carbs),\n                          isPublic: Boolean(_this5.newProduct.isPublic)\n                        };\n                        _context5.next = 10;\n                        return axios.post('http://localhost:3000/api/products/add', productData, {\n                          headers: {\n                            Authorization: \"Bearer \".concat(token),\n                            'Content-Type': 'application/json'\n                          }\n                        });\n                      case 10:\n                        response = _context5.sent;\n                        // Закрываем модальное окно\n                        _this5.addProductVisible = false;\n\n                        // Показываем сообщение об успехе\n                        ElMessage.success('Продукт успешно добавлен');\n\n                        // Добавляем продукт в журнал питания, если создание прошло успешно\n                        if (!(response.data && response.data.product)) {\n                          _context5.next = 16;\n                          break;\n                        }\n                        _context5.next = 16;\n                        return _this5.handleProductSelect({\n                          id: response.data.product.id,\n                          name: response.data.product.name,\n                          calories: Number(response.data.product.calories) || 0,\n                          proteins: Number(response.data.product.proteins) || 0,\n                          fats: Number(response.data.product.fats) || 0,\n                          carbs: Number(response.data.product.carbs) || 0\n                        });\n                      case 16:\n                        _context5.next = 24;\n                        break;\n                      case 18:\n                        _context5.prev = 18;\n                        _context5.t0 = _context5[\"catch\"](3);\n                        errorMessage = 'Ошибка при добавлении продукта';\n                        console.error('Ошибка при добавлении продукта:', _context5.t0);\n                        if (_context5.t0.response && _context5.t0.response.data) {\n                          errorMessage = _context5.t0.response.data.message || errorMessage;\n                        }\n                        ElMessage.error(errorMessage);\n                      case 24:\n                        _context5.prev = 24;\n                        _this5.loading = false;\n                        return _context5.finish(24);\n                      case 27:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }, _callee5, null, [[3, 18, 24, 27]]);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessage","name","data","searchQuery","selectedMealType","selectedDate","Date","toISOString","split","meals","breakfast","lunch","dinner","snack","totals","calories","proteins","fats","carbs","loading","addProductVisible","isAdmin","newProduct","isPublic","productRules","required","message","trigger","min","type","max","computed","hasMeals","length","created","checkIfAdmin","loadMeals","methods","token","localStorage","getItem","tokenData","JSON","parse","atob","id","error","console","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","warning","abrupt","get","headers","Authorization","concat","params","date","sent","t0","finish","stop","changeDate","days","setDate","getDate","getMealTotals","mealType","forEach","meal","nutrition","Math","round","searchProducts","queryString","callback","_this2","_callee2","_callee2$","_context2","q","limit","handleProductSelect","item","_this3","_callee3","quantity","_callee3$","_context3","post","product_id","meal_type","success","deleteMeal","mealId","_this4","_callee4","_callee4$","_context4","openAddProductModal","submitNewProduct","_this5","_callee6","_callee6$","_context6","$refs","productForm","validate","_ref","_callee5","valid","productData","errorMessage","_callee5$","_context5","Error","Number","Boolean","product","_x","apply","arguments"],"sources":["D:\\trpo backup\\trpo\\client\\src\\views\\FoodDiary.vue"],"sourcesContent":["<template>\n  <div class=\"food-diary\">\n    <h1 class=\"text-2xl font-bold mb-6\">Журнал питания</h1>\n    \n    <!-- Форма поиска продуктов -->\n    <div class=\"search-container mb-8\">\n      <h2 class=\"text-xl font-semibold mb-4\">Добавить продукт</h2>\n      <div class=\"search-form\">\n        <el-autocomplete\n          v-model=\"searchQuery\"\n          :fetch-suggestions=\"searchProducts\"\n          placeholder=\"Введите название продукта\"\n          class=\"w-full\"\n          :trigger-on-focus=\"true\"\n          @select=\"handleProductSelect\"\n        >\n          <template #default=\"{ item }\">\n            <div class=\"product-suggestion\">\n              <div class=\"product-name\">{{ item.name }}</div>\n              <div class=\"product-info text-sm text-gray-600\">\n                {{ item.calories }} ккал | Б: {{ item.proteins }}г | Ж: {{ item.fats }}г | У: {{ item.carbs }}г\n              </div>\n            </div>\n          </template>\n        </el-autocomplete>\n        \n        <div class=\"meal-type-selection mt-3\">\n          <span class=\"meal-type-label\">Тип приема пищи:</span>\n          <el-radio-group v-model=\"selectedMealType\" size=\"medium\">\n            <el-radio-button label=\"breakfast\">Завтрак</el-radio-button>\n            <el-radio-button label=\"lunch\">Обед</el-radio-button>\n            <el-radio-button label=\"dinner\">Ужин</el-radio-button>\n            <el-radio-button label=\"snack\">Перекус</el-radio-button>\n          </el-radio-group>\n        </div>\n        \n        <div class=\"mt-3 text-right\">\n          <el-button type=\"primary\" @click=\"openAddProductModal\">\n            Добавить новый продукт\n          </el-button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Дата дневника питания -->\n    <div class=\"date-navigation mb-6\">\n      <el-button @click=\"changeDate(-1)\" icon=\"el-icon-arrow-left\" circle></el-button>\n      <el-date-picker\n        v-model=\"selectedDate\"\n        type=\"date\"\n        format=\"YYYY-MM-DD\"\n        value-format=\"YYYY-MM-DD\"\n        placeholder=\"Выберите дату\"\n        @change=\"loadMeals\"\n      ></el-date-picker>\n      <el-button @click=\"changeDate(1)\" icon=\"el-icon-arrow-right\" circle></el-button>\n    </div>\n    \n    <!-- Итоги за день -->\n    <div class=\"daily-summary mb-6 p-4 bg-gray-50 rounded-lg\">\n      <h3 class=\"text-lg font-semibold mb-3\">Итого за день:</h3>\n      <div class=\"grid grid-cols-4 gap-4\">\n        <div class=\"summary-item\">\n          <div class=\"icon\">🔥</div>\n          <div class=\"value\">{{ Math.round(totals.calories) }}</div>\n          <div class=\"label\">Калории</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"icon\">🥩</div>\n          <div class=\"value\">{{ Math.round(totals.proteins) }}</div>\n          <div class=\"label\">Белки (г)</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"icon\">🥑</div>\n          <div class=\"value\">{{ Math.round(totals.fats) }}</div>\n          <div class=\"label\">Жиры (г)</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"icon\">🍞</div>\n          <div class=\"value\">{{ Math.round(totals.carbs) }}</div>\n          <div class=\"label\">Углеводы (г)</div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Контейнер для групп приемов пищи -->\n    <div class=\"meals-container\" v-if=\"hasMeals\">\n      <!-- Завтрак -->\n      <div class=\"meal-group mb-8\" v-if=\"meals.breakfast.length > 0\">\n        <div class=\"meal-header\">\n          <h3 class=\"meal-title\">\n            <span class=\"meal-icon\">🍳</span>\n            Завтрак\n          </h3>\n          <div class=\"meal-nutrition\">\n            {{ getMealTotals('breakfast').calories }} ккал\n          </div>\n        </div>\n        \n        <div class=\"meal-items\">\n          <div class=\"meal-item\" v-for=\"meal in meals.breakfast\" :key=\"meal.id\">\n            <div class=\"meal-name\">{{ meal.name }}</div>\n            <div class=\"meal-quantity\">{{ meal.quantity }}г</div>\n            <div class=\"meal-nutrition\">\n              <span>{{ Math.round(meal.nutrition.calories) }} ккал</span>\n              <span class=\"meal-macros\">Б: {{ Math.round(meal.nutrition.proteins) }}г | Ж: {{ Math.round(meal.nutrition.fats) }}г | У: {{ Math.round(meal.nutrition.carbs) }}г</span>\n            </div>\n            <div class=\"meal-actions\">\n              <el-button \n                type=\"danger\" \n                size=\"small\" \n                icon=\"el-icon-delete\" \n                circle \n                @click=\"deleteMeal(meal.id)\"\n              ></el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Обед -->\n      <div class=\"meal-group mb-8\" v-if=\"meals.lunch.length > 0\">\n        <div class=\"meal-header\">\n          <h3 class=\"meal-title\">\n            <span class=\"meal-icon\">🍲</span>\n            Обед\n          </h3>\n          <div class=\"meal-nutrition\">\n            {{ getMealTotals('lunch').calories }} ккал\n          </div>\n        </div>\n        \n        <div class=\"meal-items\">\n          <div class=\"meal-item\" v-for=\"meal in meals.lunch\" :key=\"meal.id\">\n            <div class=\"meal-name\">{{ meal.name }}</div>\n            <div class=\"meal-quantity\">{{ meal.quantity }}г</div>\n            <div class=\"meal-nutrition\">\n              <span>{{ Math.round(meal.nutrition.calories) }} ккал</span>\n              <span class=\"meal-macros\">Б: {{ Math.round(meal.nutrition.proteins) }}г | Ж: {{ Math.round(meal.nutrition.fats) }}г | У: {{ Math.round(meal.nutrition.carbs) }}г</span>\n            </div>\n            <div class=\"meal-actions\">\n              <el-button \n                type=\"danger\" \n                size=\"small\" \n                icon=\"el-icon-delete\" \n                circle \n                @click=\"deleteMeal(meal.id)\"\n              ></el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Ужин -->\n      <div class=\"meal-group mb-8\" v-if=\"meals.dinner.length > 0\">\n        <div class=\"meal-header\">\n          <h3 class=\"meal-title\">\n            <span class=\"meal-icon\">🍽️</span>\n            Ужин\n          </h3>\n          <div class=\"meal-nutrition\">\n            {{ getMealTotals('dinner').calories }} ккал\n          </div>\n        </div>\n        \n        <div class=\"meal-items\">\n          <div class=\"meal-item\" v-for=\"meal in meals.dinner\" :key=\"meal.id\">\n            <div class=\"meal-name\">{{ meal.name }}</div>\n            <div class=\"meal-quantity\">{{ meal.quantity }}г</div>\n            <div class=\"meal-nutrition\">\n              <span>{{ Math.round(meal.nutrition.calories) }} ккал</span>\n              <span class=\"meal-macros\">Б: {{ Math.round(meal.nutrition.proteins) }}г | Ж: {{ Math.round(meal.nutrition.fats) }}г | У: {{ Math.round(meal.nutrition.carbs) }}г</span>\n            </div>\n            <div class=\"meal-actions\">\n              <el-button \n                type=\"danger\" \n                size=\"small\" \n                icon=\"el-icon-delete\" \n                circle \n                @click=\"deleteMeal(meal.id)\"\n              ></el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Перекусы -->\n      <div class=\"meal-group mb-8\" v-if=\"meals.snack.length > 0\">\n        <div class=\"meal-header\">\n          <h3 class=\"meal-title\">\n            <span class=\"meal-icon\">🍎</span>\n            Перекусы\n          </h3>\n          <div class=\"meal-nutrition\">\n            {{ getMealTotals('snack').calories }} ккал\n          </div>\n        </div>\n        \n        <div class=\"meal-items\">\n          <div class=\"meal-item\" v-for=\"meal in meals.snack\" :key=\"meal.id\">\n            <div class=\"meal-name\">{{ meal.name }}</div>\n            <div class=\"meal-quantity\">{{ meal.quantity }}г</div>\n            <div class=\"meal-nutrition\">\n              <span>{{ Math.round(meal.nutrition.calories) }} ккал</span>\n              <span class=\"meal-macros\">Б: {{ Math.round(meal.nutrition.proteins) }}г | Ж: {{ Math.round(meal.nutrition.fats) }}г | У: {{ Math.round(meal.nutrition.carbs) }}г</span>\n            </div>\n            <div class=\"meal-actions\">\n              <el-button \n                type=\"danger\" \n                size=\"small\" \n                icon=\"el-icon-delete\" \n                circle \n                @click=\"deleteMeal(meal.id)\"\n              ></el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Состояние, если нет записей за выбранный день -->\n    <el-empty \n      v-if=\"!hasMeals\" \n      description=\"В журнале питания нет записей за выбранный день\" \n    ></el-empty>\n    \n    <!-- Модальное окно добавления продукта -->\n    <el-dialog\n      v-model=\"addProductVisible\"\n      title=\"Добавить новый продукт\"\n      width=\"500px\"\n    >\n      <el-form \n        :model=\"newProduct\" \n        :rules=\"productRules\" \n        ref=\"productForm\" \n        label-position=\"top\"\n      >\n        <el-form-item label=\"Название продукта\" prop=\"name\">\n          <el-input v-model=\"newProduct.name\" placeholder=\"Введите название продукта\" />\n        </el-form-item>\n        \n        <el-form-item label=\"Калории (на 100г)\" prop=\"calories\">\n          <el-input-number \n            v-model=\"newProduct.calories\" \n            :min=\"0\" \n            :max=\"5000\" \n            :precision=\"0\" \n            :step=\"1\"\n            class=\"w-full\"\n          />\n        </el-form-item>\n        \n        <div class=\"grid grid-cols-3 gap-4\">\n          <el-form-item label=\"Белки (г)\" prop=\"proteins\">\n            <el-input-number \n              v-model=\"newProduct.proteins\" \n              :min=\"0\" \n              :max=\"500\" \n              :precision=\"1\" \n              :step=\"0.1\" \n              class=\"w-full\"\n            />\n          </el-form-item>\n          \n          <el-form-item label=\"Жиры (г)\" prop=\"fats\">\n            <el-input-number \n              v-model=\"newProduct.fats\" \n              :min=\"0\" \n              :max=\"500\" \n              :precision=\"1\" \n              :step=\"0.1\"\n              class=\"w-full\"\n            />\n          </el-form-item>\n          \n          <el-form-item label=\"Углеводы (г)\" prop=\"carbs\">\n            <el-input-number \n              v-model=\"newProduct.carbs\" \n              :min=\"0\" \n              :max=\"500\" \n              :precision=\"1\" \n              :step=\"0.1\"\n              class=\"w-full\"\n            />\n          </el-form-item>\n        </div>\n        \n        <el-form-item v-if=\"isAdmin\">\n          <el-checkbox v-model=\"newProduct.isPublic\">Добавить в общую базу данных</el-checkbox>\n          <div class=\"text-xs text-gray-500 mt-1\">\n            Если отмечено, продукт будет доступен всем пользователям\n          </div>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"addProductVisible = false\">Отмена</el-button>\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"submitNewProduct\">\n            Добавить\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\nexport default {\n  name: 'FoodDiaryPage',\n  data() {\n    return {\n      searchQuery: '',\n      selectedMealType: 'breakfast', // Выбранный тип приема пищи (завтрак по умолчанию)\n      selectedDate: new Date().toISOString().split('T')[0], // Текущая дата в формате YYYY-MM-DD\n      meals: {\n        breakfast: [],\n        lunch: [],\n        dinner: [],\n        snack: []\n      },\n      totals: {\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0\n      },\n      loading: false,\n      addProductVisible: false,\n      isAdmin: false,\n      newProduct: {\n        name: '',\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0,\n        isPublic: false\n      },\n      productRules: {\n        name: [\n          { required: true, message: 'Пожалуйста, введите название продукта', trigger: 'blur' },\n          { min: 2, message: 'Название должно быть не менее 2 символов', trigger: 'blur' }\n        ],\n        calories: [\n          { required: true, message: 'Пожалуйста, укажите калорийность', trigger: 'blur' },\n          { type: 'number', min: 0, max: 5000, message: 'Калории должны быть от 0 до 5000', trigger: 'blur' }\n        ],\n        proteins: [\n          { required: true, message: 'Пожалуйста, укажите содержание белков', trigger: 'blur' },\n          { type: 'number', min: 0, max: 500, message: 'Белки должны быть от 0 до 500г', trigger: 'blur' }\n        ],\n        fats: [\n          { required: true, message: 'Пожалуйста, укажите содержание жиров', trigger: 'blur' },\n          { type: 'number', min: 0, max: 500, message: 'Жиры должны быть от 0 до 500г', trigger: 'blur' }\n        ],\n        carbs: [\n          { required: true, message: 'Пожалуйста, укажите содержание углеводов', trigger: 'blur' },\n          { type: 'number', min: 0, max: 500, message: 'Углеводы должны быть от 0 до 500г', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    // Проверка наличия приемов пищи\n    hasMeals() {\n      return this.meals.breakfast.length > 0 || \n             this.meals.lunch.length > 0 || \n             this.meals.dinner.length > 0 || \n             this.meals.snack.length > 0;\n    }\n  },\n  created() {\n    // Проверяем, является ли пользователь администратором\n    this.checkIfAdmin();\n    \n    // Загружаем приемы пищи для текущей даты\n    this.loadMeals();\n  },\n  methods: {\n    // Проверка прав администратора\n    checkIfAdmin() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const tokenData = JSON.parse(atob(token.split('.')[1]));\n          this.isAdmin = tokenData.id === 1; // Считаем пользователя с id=1 администратором\n        } catch (error) {\n          console.error('Ошибка при проверке прав администратора:', error);\n          this.isAdmin = false;\n        }\n      } else {\n        this.isAdmin = false;\n      }\n    },\n    \n    // Загрузка приемов пищи за выбранную дату\n    async loadMeals() {\n      this.loading = true;\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          ElMessage.warning('Необходимо авторизоваться для доступа к журналу питания');\n          return;\n        }\n        \n        const response = await axios.get('http://localhost:3000/api/meals/get', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { date: this.selectedDate }\n        });\n        \n        // Заполняем приемы пищи и итоги из ответа сервера\n        this.meals = response.data.meals;\n        this.totals = response.data.totals;\n      } catch (error) {\n        console.error('Ошибка при загрузке приемов пищи:', error);\n        ElMessage.error('Не удалось загрузить данные журнала питания');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // Изменение выбранной даты\n    changeDate(days) {\n      const date = new Date(this.selectedDate);\n      date.setDate(date.getDate() + days);\n      this.selectedDate = date.toISOString().split('T')[0];\n      this.loadMeals();\n    },\n    \n    // Расчет итогов КБЖУ для конкретного типа приема пищи\n    getMealTotals(mealType) {\n      const totals = {\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0\n      };\n      \n      this.meals[mealType].forEach(meal => {\n        totals.calories += meal.nutrition.calories;\n        totals.proteins += meal.nutrition.proteins;\n        totals.fats += meal.nutrition.fats;\n        totals.carbs += meal.nutrition.carbs;\n      });\n      \n      return {\n        calories: Math.round(totals.calories),\n        proteins: Math.round(totals.proteins),\n        fats: Math.round(totals.fats),\n        carbs: Math.round(totals.carbs)\n      };\n    },\n    \n    // Поиск продуктов с автодополнением\n    async searchProducts(queryString, callback) {\n      if (queryString.length < 2) {\n        callback([]);\n        return;\n      }\n      \n      this.loading = true;\n      try {\n        const token = localStorage.getItem('token');\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n        \n        const response = await axios.get('http://localhost:3000/api/products/search', {\n          params: {\n            q: queryString,\n            limit: 5\n          },\n          headers\n        });\n        \n        callback(response.data);\n      } catch (error) {\n        console.error('Ошибка при поиске продуктов:', error);\n        ElMessage.error('Ошибка при поиске продуктов. Пожалуйста, попробуйте снова.');\n        callback([]);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // Обработка выбора продукта из списка\n    async handleProductSelect(item) {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          ElMessage.warning('Необходимо авторизоваться для добавления продуктов');\n          return;\n        }\n        \n        // Стандартное количество - 100г\n        const quantity = 100;\n        \n        // Отправляем запрос на сервер для добавления приема пищи\n        await axios.post('http://localhost:3000/api/meals/add', {\n          product_id: item.id,\n          quantity,\n          meal_type: this.selectedMealType,\n          date: this.selectedDate\n        }, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        // Обновляем список приемов пищи\n        this.loadMeals();\n        \n        // Очищаем строку поиска\n        this.searchQuery = '';\n        \n        ElMessage.success('Продукт добавлен в журнал питания');\n      } catch (error) {\n        console.error('Ошибка при добавлении продукта в журнал питания:', error);\n        ElMessage.error('Не удалось добавить продукт в журнал питания');\n      }\n    },\n    \n    // Удаление приема пищи из журнала\n    async deleteMeal(mealId) {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        await axios.delete(`http://localhost:3000/api/meals/${mealId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        // Обновляем список приемов пищи\n        this.loadMeals();\n        \n        ElMessage.success('Продукт удален из журнала питания');\n      } catch (error) {\n        console.error('Ошибка при удалении приема пищи:', error);\n        ElMessage.error('Не удалось удалить продукт из журнала питания');\n      }\n    },\n    \n    // Открыть модальное окно добавления продукта\n    openAddProductModal() {\n      this.newProduct = {\n        name: '',\n        calories: 0,\n        proteins: 0,\n        fats: 0,\n        carbs: 0,\n        isPublic: false\n      };\n      this.addProductVisible = true;\n    },\n    \n    // Добавление нового продукта\n    async submitNewProduct() {\n      this.$refs.productForm.validate(async (valid) => {\n        if (!valid) return false;\n        \n        this.loading = true;\n        try {\n          const token = localStorage.getItem('token');\n          if (!token) {\n            throw new Error('Требуется авторизация');\n          }\n          \n          // Преобразуем данные в правильный формат\n          const productData = {\n            name: this.newProduct.name,\n            calories: Number(this.newProduct.calories),\n            proteins: Number(this.newProduct.proteins),\n            fats: Number(this.newProduct.fats),\n            carbs: Number(this.newProduct.carbs),\n            isPublic: Boolean(this.newProduct.isPublic)\n          };\n          \n          const response = await axios.post('http://localhost:3000/api/products/add', productData, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          // Закрываем модальное окно\n          this.addProductVisible = false;\n          \n          // Показываем сообщение об успехе\n          ElMessage.success('Продукт успешно добавлен');\n          \n          // Добавляем продукт в журнал питания, если создание прошло успешно\n          if (response.data && response.data.product) {\n            await this.handleProductSelect({\n              id: response.data.product.id,\n              name: response.data.product.name,\n              calories: Number(response.data.product.calories) || 0,\n              proteins: Number(response.data.product.proteins) || 0,\n              fats: Number(response.data.product.fats) || 0,\n              carbs: Number(response.data.product.carbs) || 0\n            });\n          }\n        } catch (error) {\n          let errorMessage = 'Ошибка при добавлении продукта';\n          \n          console.error('Ошибка при добавлении продукта:', error);\n          if (error.response && error.response.data) {\n            errorMessage = error.response.data.message || errorMessage;\n          }\n          \n          ElMessage.error(errorMessage);\n        } finally {\n          this.loading = false;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.food-diary {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.search-form {\n  margin-bottom: 1rem;\n  background-color: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.meal-type-selection {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.meal-type-label {\n  font-weight: 600;\n  margin-right: 0.5rem;\n}\n\n.date-navigation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n}\n\n.daily-summary {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.summary-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.summary-item .icon {\n  font-size: 1.5rem;\n  margin-bottom: 0.25rem;\n}\n\n.summary-item .value {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #333;\n}\n\n.summary-item .label {\n  font-size: 0.9rem;\n  color: #666;\n  margin-top: 0.25rem;\n}\n\n.meal-group {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.meal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #eee;\n}\n\n.meal-title {\n  display: flex;\n  align-items: center;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.meal-icon {\n  font-size: 1.4rem;\n  margin-right: 0.5rem;\n}\n\n.meal-nutrition {\n  font-weight: 600;\n  color: #4CAF50;\n}\n\n.meal-items {\n  padding: 0.5rem;\n}\n\n.meal-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #eee;\n}\n\n.meal-item:last-child {\n  border-bottom: none;\n}\n\n.meal-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.meal-quantity {\n  width: 70px;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.meal-nutrition {\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.meal-macros {\n  font-size: 0.8rem;\n  color: #666;\n  margin-top: 0.25rem;\n}\n\n.meal-actions {\n  width: 50px;\n  text-align: right;\n}\n\n/* Стили для корректного выравнивания input-number */\n:deep(.el-input-number) {\n  width: 100%;\n}\n\n:deep(.el-input-number .el-input__wrapper) {\n  padding-right: 0;\n}\n\n:deep(.el-input-number .el-input__inner) {\n  text-align: center;\n  padding: 0 8px;\n}\n\n:deep(.el-input-number .el-input-number__decrease),\n:deep(.el-input-number .el-input-number__increase) {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Стили для текстового поля ввода граммовки */\n.weight-input {\n  width: 100%;\n}\n\n:deep(.weight-input .el-input__wrapper) {\n  padding: 0 8px;\n}\n\n:deep(.weight-input .el-input__inner) {\n  text-align: center;\n  -moz-appearance: textfield; /* Firefox */\n}\n\n/* Скрываем стрелки для числового поля в других браузерах */\n:deep(.weight-input .el-input__inner::-webkit-outer-spin-button),\n:deep(.weight-input .el-input__inner::-webkit-inner-spin-button) {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Белый текст для заголовков и параграфов на фоне фонового изображения */\n.food-diary h1,\n.food-diary h2,\n.food-diary p {\n  color: white;\n}\n\n/* Адаптивность для мобильных устройств */\n@media (max-width: 768px) {\n  .meal-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n  \n  .meal-nutrition,\n  .meal-quantity {\n    width: 100%;\n    text-align: left;\n  }\n  \n  .meal-actions {\n    width: 100%;\n    text-align: left;\n    margin-top: 0.5rem;\n  }\n  \n  .meal-nutrition {\n    align-items: flex-start;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}